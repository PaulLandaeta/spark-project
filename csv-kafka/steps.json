1 ) Start a new connector instance

{
  "connector.class": "io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector",
  "filters": "ParseDelimitedRow",   
  "filters.ParseDelimitedRow.extractColumnName": "headers",
  "filters.ParseDelimitedRow.separator":"\\|",
  "filters.ParseDelimitedRow.trimColumn": "false",
  "filters.ParseDelimitedRow.type": "io.streamthoughts.kafka.connect.filepulse.filter.DelimitedRowFilter",    

  "fs.cleanup.policy.class": "io.streamthoughts.kafka.connect.filepulse.fs.clean.LogCleanupPolicy",
  "fs.listing.class": "io.streamthoughts.kafka.connect.filepulse.fs.LocalFSDirectoryListing",
  "fs.listing.directory.path":"/tmp/kafka-connect/data/",
  "fs.listing.filters":"io.streamthoughts.kafka.connect.filepulse.fs.filter.RegexFileListFilter",
  "fs.listing.interval.ms": "10000",
  "file.filter.regex.pattern":".*\\.csv$",
  "offset.attributes.string": "name+hash",
  "skip.headers": "1",
  "topic": "attack_annotated_comments",
  "tasks.reader.class": "io.streamthoughts.kafka.connect.filepulse.fs.reader.LocalRowFileInputReader",
  "tasks.file.status.storage.class": "io.streamthoughts.kafka.connect.filepulse.state.KafkaFileObjectStateBackingStore",
  "tasks.file.status.storage.bootstrap.servers": "broker:29092",
  "tasks.file.status.storage.topic": "attack_annotated_comments_status",
  "tasks.file.status.storage.topic.partitions": 10,
  "tasks.file.status.storage.topic.replication.factor": 1,
  "tasks.max": 1
}


curl -sX PUT http://localhost:8083/connectors/connect-comments-csv/config \
-d @config.json \
--header "Content-Type: application/json" | jq


2 ) Copy example csv file into container

docker exec -it connect mkdir -p /tmp/kafka-connect/data

docker exec -it connect bash

docker cp attack_annotated_comments1000.csv connect://tmp/kafka-connect/data/attack_annotated_comments1000.csv
docker cp testout.csv connect://tmp/kafka-connect/data/testout.csv


3 ) Check connector status

curl -X GET http://localhost:8083/connectors/connect-comments-csv | jq


4 ) Check for task completion

docker logs --tail="all" -f connect | grep "Orphan task detected"


5 ) Consume output topics

docker exec -it connect kafka-avro-console-consumer \
--topic attack_annotated_comments \
--from-beginning \
--bootstrap-server broker:29092 \
--property schema.registry.url=http://schema-registry:8081